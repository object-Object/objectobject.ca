[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "objectobject.ca"
version = "0.1.0"
authors = [
    { name="object-Object" },
]
license = { file = "LICENSE" }
requires-python = ">=3.11"
dependencies = [
    "aws-cdk-lib~=2.102",
    "aws-cdk-github-oidc~=2.4",
    "cdktf~=0.19",
    "cdktf-cdktf-provider-cloudflare~=10.0",
]

[project.optional-dependencies]
dev = [
    "ruff~=0.11.8",
    "pytest~=7.3",
    "nox",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/objectobject_ca",
]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]

[tool.ruff]
extend-exclude = [
    "vendor",
    "venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

[tool.ruff.lint]
extend-select = [
    "I", # import sorting
    "RUF022", # __all__ sorting
]
extend-ignore = [
    # covered by Pyright
    "F821", # undefined variable
    "F401", # imported but unused
    "F841", # unused variable
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.pyright]
pythonVersion = "3.11"
pythonPlatform = "All"

exclude = ["venv"]

enableExperimentalFeatures = true

typeCheckingMode = "basic"

strictDictionaryInference = true
strictListInference = true
strictSetInference = true

reportAssertAlwaysTrue = "error"
reportConstantRedefinition = "error"
reportDeprecated = "error"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "error"
reportIncompatibleMethodOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidStubStatement = "error"
reportInvalidTypeVarUse = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
reportMissingTypeStubs = "error"
reportOverlappingOverload = "error"
reportSelfClsParameterName = "error"
reportTypeCommentUsage = "error"
reportUnknownParameterType = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryContains = "error"
reportUnsupportedDunderAll = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportWildcardImportFromLibrary = "error"

reportMissingTypeArgument = "warning"
reportPrivateUsage = "warning"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryIsInstance =  	"warning"
reportUnusedClass = "warning"
reportUnusedExpression = "warning"
reportUnusedFunction = "warning"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"

reportUnknownVariableType = "none"
reportIncompatibleVariableOverride = "none"